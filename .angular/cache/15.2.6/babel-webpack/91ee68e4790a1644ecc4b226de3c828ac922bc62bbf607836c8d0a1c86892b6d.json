{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/UsuarioM/git/becaonce2ed/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./paises.service\";\nexport class FronteraPaisPipe {\n  constructor(service) {\n    this.service = service;\n  }\n  transform(value) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const promises = value.map(border => {\n        return _this.service.dameDatos(\"https://restcountries.com/v3.1/alpha/\" + border).then(datos => {\n          return datos[0].name.common;\n        });\n      });\n      const results = yield Promise.all(promises);\n      return results;\n    })();\n  }\n}\nFronteraPaisPipe.ɵfac = function FronteraPaisPipe_Factory(t) {\n  return new (t || FronteraPaisPipe)(i0.ɵɵdirectiveInject(i1.PaisesService, 16));\n};\nFronteraPaisPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"fronteraPais\",\n  type: FronteraPaisPipe,\n  pure: true\n});","map":{"version":3,"mappings":";;;AAMA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAoBC,OAAsB;IAAtB,YAAO,GAAPA,OAAO;EAAmB;EAExCC,SAAS,CAACC,KAAoB;IAAA;IAAA;MAClC,MAAMC,QAAQ,GAAGD,KAAK,CAACE,GAAG,CAAEC,MAAc,IAAI;QAC5C,OAAO,KAAI,CAACL,OAAO,CAACM,SAAS,CAAC,uCAAuC,GAAGD,MAAM,CAAC,CAC5EE,IAAI,CAAEC,KAAU,IAAI;UACnB,OAAOA,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,MAAM;QAC7B,CAAC,CAAC;MACN,CAAC,CAAC;MACF,MAAMC,OAAO,SAASC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;MAC3C,OAAOQ,OAAO;IAAC;EACjB;;AAbWb,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;;QAAhBA,gBAAgB;EAAAgB;AAAA","names":["FronteraPaisPipe","constructor","service","transform","value","promises","map","border","dameDatos","then","datos","name","common","results","Promise","all","pure"],"sourceRoot":"","sources":["C:\\Users\\UsuarioM\\git\\becaonce2ed\\src\\app\\frontera-pais.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { PaisesService } from './paises.service';\n\n@Pipe({\n  name: 'fronteraPais'\n})\nexport class FronteraPaisPipe implements PipeTransform {\n\n  constructor(private service: PaisesService) { }\n\n  async transform(value: Array<string>): Promise<Array<string>> {\n    const promises = value.map((border: string) => {\n      return this.service.dameDatos(\"https://restcountries.com/v3.1/alpha/\" + border)\n        .then((datos: any) => {\n          return datos[0].name.common;\n        })\n    });\n    const results = await Promise.all(promises);\n    return results;\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}